name: integration

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - "**"
jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
      - name: pre-commit
        uses: Foxon-Consulting/github-actions/integration/common/pre-commit@main

  # integration:
  #   uses: Foxon-Consulting/github-actions/.github/workflows/python_integration.yml@main
  #   with:
  #     python_version: "3.11"

  # releasing:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - pre-commit
  #     - integration
  #   if: github.ref == 'refs/heads/main'
  #   steps:
  #     - name: releasing
  #       uses: Foxon-Consulting/github-actions/delivery/common/release-please@main

  # delivery:
  #   needs:
  #     - releasing
  #   if: github.ref == 'refs/heads/main'
  #   permissions:
  #     contents: write
  #     pull-requests: write
   #   uses: Foxon-Consulting/github-actions/.github/workflows/python_delivery.yml@main

  build:
    # needs: lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Python ${{ inputs.python_version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ inputs.python_version }}
      - name: update pip
        run: |
          python -m pip install --upgrade pip
      - name: Install build dependencies
        run: |
          pip install build
      - name: build wheel
        run: |
          python -m build --wheel
      - name: Upload artifact
        uses: actions/upload-artifact@v3
        with:
          name: applicative_artifact
          path: dist/twine_delivery-0.0.2-py3-none-any.whl

  delivery:
    needs:
      - build
    #   - releasing
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    steps:
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: applicative_artifact
          path: ./delivery/

      - name: Delivery Artifact into aws artifactory
        # write github actions with twine
        run: |
          aws codeartifact login --tool twine --domain foxonconsulting --domain-owner 039130791457 --repository general --region eu-west-1
          pip install twine
          export TWINE_USERNAME=aws
          export TWINE_PASSWORD=`aws codeartifact get-authorization-token --domain foxonconsulting --domain-owner 039130791457 --region eu-west-1 --query authorizationToken --output text`
          export TWINE_REPOSITORY_URL=`aws codeartifact get-repository-endpoint --domain foxonconsulting --domain-owner 039130791457 --repository general --region eu-west-1 --format pypi --query repositoryEndpoint --output text`
          ls -la
          twine upload --repository-url $TWINE_REPOSITORY_URL ./delivery/*
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: eu-west-1



  # deployment:
  #   needs:
  #     - releasing
  #     - delivery
  #   if: github.ref == 'refs/heads/dev'
  #   permissions:
  #     contents: write
  #     pull-requests: write
  #     uses: Foxon-Consulting/github-actions/.github/workflows/python_deployment.yml@main
